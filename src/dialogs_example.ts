import { ICON_BEER, ICON_LOOK } from "./icons";
import { Action } from "./entities/Action";
import { Condition } from "./entities/Condition";
import { Dialog } from "./entities/Dialog";
import { Phrase } from "./entities/Phrase";
import { Effect } from "./entities/Effect";
import { ACTION_MESSAGE, DIALOG_IMAGE, DIALOG_MESSAGE } from "./config";

const dialogs_example = [
  // Первый диалог в массиве всегда стартовый

  new Dialog(
    // Техническое название диалога. Должно быть уникальным
    "tavern", 
    // Текст, который будет отправлен в сообщении при входе в этот диалог
    // Вместо строки, можно записывать массив строк, тогда между ними будут отступы
    "Похоже я нахожусь в таверне.", 
    [
      new Phrase(
        // Текст кнопки
        "Оглядеться", 
        // Техническое название фразы. Должно быть уникальным в рамках диалога
        "look", 
        // Иконка-эмоджи из /src/icons.ts
        ICON_LOOK, 
        [ 
          // Условия, при которых будет показана эта фраза. В данном случае если фраза показывается, если мы еще не осматривали таверну
          // Условий может не быть, тогда фраза всегда будет показываться в данном диалоге
          new Condition("tavernLooked", "==", false) 
        ],
        [ 
          // Действия
          new Action(
            [ // Эффекты, которые проигрываются при нажатии на кнопку фразы при соблюдении условий
              new Effect("tavernSale", "=", true), 
              // ACTION_MESSAGE - определяет какая фраза будет добавлена перед следующим диалоговым сообщением
              // Как правило связана с тем, какое действие было выполнено
              new Effect(ACTION_MESSAGE, "=", `Ты видишь табличку "Скидки всем девушкам 50%"`),
              // DIALOG_MESSAGE - полностью заменяет стандартный текст диалога при входе в него
              new Effect(DIALOG_MESSAGE, "=", `Ох, как же голова трещит`),
              // DIALOG_IMAGE - Добавляет картинку к следующему диалогу
              new Effect(DIALOG_IMAGE, "=", `tavern.png`) 

            ], 
            [
              // Проверка, которая определяет какой блок эффектов будет применен, верхний или нижний
              // В данном случае если мудрость (wisdom) персонажа больше или равна 4, то проиграется верхний блок
              new Condition("wisdom", ">=", 4) 
            ], 
            [ 
              // // Эффекты, которые проигрываются при нажатии на кнопку фразы при НЕ соблюдении условий
              new Effect(ACTION_MESSAGE, "=", `Ты не замечаешь ничего не обычного`),
              new Effect(DIALOG_MESSAGE, "=", `Ох, как же голова трещит`) 
            ]
          ),
          new Action([ 
            // У данного экшена нет условий, а значит всегда будет сыгран только этот блок эффектов
            new Effect("tavernLooked", "=", true) 
          ])
        ],
        // Это техническое название следующего диалога. В данном случае мы остаемся в том же диалоге
        "tavern"
      ),
      new Phrase(
        "Заказать пива", 
        "beer", 
        ICON_BEER,
        [
          new Condition("beerBuyed", "==", false)
        ],
        [
          // В данном случае нет никаких эффектов
        ], 
        "tavernBeer" // Переход в другой диалог
      ),
    ]
  ), 

  // Следующие диалоги
]
